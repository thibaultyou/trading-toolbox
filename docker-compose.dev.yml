services:
  proxy:
    image: nginx:1.25.4-alpine3.18-slim
    restart: unless-stopped
    ports:
      - "0.0.0.0:1234:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - adminer

  server:
    build: ./back
    command: npm run start:dev
    restart: unless-stopped
    ports:
      - "0.0.0.0:4000:4000"
    volumes:
      - ./back:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:16.2-alpine3.19
    restart: unless-stopped
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - db-data-dev:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - .env

  adminer:
    image: adminer:4.8.1-standalone
    restart: unless-stopped
    ports:
      - "0.0.0.0:6000:8080"

volumes:
  db-data-dev: