version: "3"
services:
  proxy:
    image: nginx:alpine3.17-slim
    restart: unless-stopped
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports: [ "0.0.0.0:1234:80" ]
    depends_on:
      - server
      - client
      - adminer
  server:
    build: ./back
    command: npm run start
    volumes:
      - ./back:/app
    ports: [ "0.0.0.0:4000:4000" ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    depends_on:
      - db
  client:
    build: ./front
    command: npm start
    volumes:
      - ./front:/app
    ports: [ "0.0.0.0:3000:3000" ]
    depends_on:
      - server
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports: [ "0.0.0.0:8080:8080" ]

volumes:
  db-data:
