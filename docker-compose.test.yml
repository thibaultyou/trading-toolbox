services:
  proxy:
    image: nginx:1.25.4-alpine3.18-slim
    restart: unless-stopped
    ports:
      - "0.0.0.0:${PROXY_PORT}:80"
    volumes:
      - ./proxy/nginx.template.conf:/etc/nginx/nginx.template.conf:ro
    environment:
      SERVER_PORT: ${SERVER_PORT}
      ADMINER_PORT: ${ADMINER_PORT}
      PROXY_HOST: ${PROXY_HOST}
    entrypoint:
      - /bin/sh
      - -c
      - |
          envsubst < /etc/nginx/nginx.template.conf > /etc/nginx/nginx.conf && \
          nginx -g 'daemon off;'
    depends_on:
      - server
      - adminer

  server:
    build: ./back
    command: npm run test:e2e
    restart: "no"
    ports:
      - "0.0.0.0:${SERVER_PORT}:4000"
    volumes:
      - ./back:/app
      - /app/node_modules
    env_file:
      - .env.test
    depends_on:
      - db

  db:
    image: postgres:16.2-alpine3.19
    restart: unless-stopped
    ports:
      - "0.0.0.0:${DATABASE_PORT}:5432"
    volumes:
      - db-data-test:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - .env.test

  adminer:
    image: adminer:4.8.1-standalone
    restart: unless-stopped
    ports:
      - "0.0.0.0:${ADMINER_PORT}:8080"

volumes:
  db-data-test: